"""Initial Ringo 1.0 migration

Revision ID: 57c6ab33ad2f
Revises: None
Create Date: 2015-02-06 14:50:13.379703

"""

# revision identifiers, used by Alembic.
revision = '57c6ab33ad2f'
down_revision = None

from alembic import op
import sqlalchemy as sa


UPGRADE = """
INSERT INTO "modules" (id, name, clazzpath, label, label_plural, description, str_repr, display, uuid, gid) VALUES (1,'modules','ringo.model.modul.ModulItem','Modul','Modules','','%s|name','admin-menu','d1763c385bd64d7185ca7fba9b3de845',NULL);
INSERT INTO "modules" (id, name, clazzpath, label, label_plural, description, str_repr, display, uuid, gid) VALUES (2,'actions','ringo.model.modul.ActionItem','Action','Actions','','%s (%s/%s)|name,modul,url','hidden','fcb3f8f87cc340358e18c4017bf93f34',NULL);
INSERT INTO "modules" (id, name, clazzpath, label, label_plural, description, str_repr, display, uuid, gid) VALUES(3,'users','ringo.model.user.User','User','Users','','%s|login','admin-menu','70f24f2a8b63420e9afde6af43be45d2',NULL);
INSERT INTO "modules" (id, name, clazzpath, label, label_plural, description, str_repr, display, uuid, gid) VALUES(4,'usergroups','ringo.model.user.Usergroup','Usergroup','Usergroups','','%s|name','admin-menu','74af1cfbf3de4bceb5f2cb483381229e',NULL);
INSERT INTO "modules" (id, name, clazzpath, label, label_plural, description, str_repr, display, uuid, gid) VALUES(5,'roles','ringo.model.user.Role','Role','Roles','','%s|name','admin-menu','c0138448b3964a5682411f57409e67f1',NULL);
INSERT INTO "modules" (id, name, clazzpath, label, label_plural, description, str_repr, display, uuid, gid) VALUES(6,'profiles','ringo.model.user.Profile','Profile','Profiles','','%s %s|first_name,last_name','admin-menu','7d99e6702cdc4a9c928c1eaa470e11b6',NULL);
INSERT INTO "modules" (id, name, clazzpath, label, label_plural, description, str_repr, display, uuid, gid) VALUES(14,'forms','ringo.model.form.Form','Form','Forms','','%s|title','admin-menu','f5108e1ce27b4f229655d0ad35e843cb',NULL);
"""
DOWNGRADE = """"""


def iter_statements(stmts):
    for st in [x for x in stmts.split('\n') if x]:
        op.execute(st)


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('values', sa.Text(), nullable=True),
    sa.Column('author', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usergroups',
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('settings', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.Text(), server_default='', nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label'),
    sa.UniqueConstraint('name')
    )
    op.create_table('modules',
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('clazzpath', sa.Text(), nullable=False),
    sa.Column('label', sa.Text(), nullable=False),
    sa.Column('label_plural', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('str_repr', sa.Text(), nullable=True),
    sa.Column('display', sa.Text(), nullable=True),
    sa.Column('gid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gid'], ['usergroups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('clazzpath'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('activated', sa.Boolean(), nullable=True),
    sa.Column('activation_token', sa.Text(), nullable=True),
    sa.Column('gid', sa.Integer(), nullable=True),
    sa.Column('sid', sa.Integer(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['gid'], ['usergroups.id'], ),
    sa.ForeignKeyConstraint(['sid'], ['user_settings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('nm_usergroup_roles',
    sa.Column('gid', sa.Integer(), nullable=True),
    sa.Column('rid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gid'], ['usergroups.id'], ),
    sa.ForeignKeyConstraint(['rid'], ['roles.id'], )
    )
    op.create_table('forms',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('review_state_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('definition', sa.Text(), nullable=True),
    sa.Column('mid', sa.Integer(), nullable=True),
    sa.Column('uid', sa.Integer(), nullable=True),
    sa.Column('gid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gid'], ['usergroups.id'], ),
    sa.ForeignKeyConstraint(['mid'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('web', sa.Text(), nullable=True),
    sa.Column('uid', sa.Integer(), nullable=True),
    sa.Column('gid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gid'], ['usergroups.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actions',
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mid', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('icon', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('bundle', sa.Boolean(), server_default=sa.text(u'0'), nullable=False),
    sa.Column('display', sa.Text(), nullable=True),
    sa.Column('permission', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['mid'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('password_reset_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nm_user_usergroups',
    sa.Column('uid', sa.Integer(), nullable=True),
    sa.Column('gid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gid'], ['usergroups.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], )
    )
    op.create_table('nm_user_roles',
    sa.Column('uid', sa.Integer(), nullable=True),
    sa.Column('rid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rid'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], )
    )
    op.create_table('nm_action_roles',
    sa.Column('aid', sa.Integer(), nullable=True),
    sa.Column('rid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['aid'], ['actions.id'], ),
    sa.ForeignKeyConstraint(['rid'], ['roles.id'], )
    )
    ### end Alembic commands ###
    iter_statements(UPGRADE)


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('nm_action_roles')
    op.drop_table('nm_user_roles')
    op.drop_table('nm_user_usergroups')
    op.drop_table('password_reset_requests')
    op.drop_table('actions')
    op.drop_table('profiles')
    op.drop_table('forms')
    op.drop_table('nm_usergroup_roles')
    op.drop_table('users')
    op.drop_table('modules')
    op.drop_table('roles')
    op.drop_table('user_settings')
    op.drop_table('usergroups')
    op.drop_table('versions')
    ### end Alembic commands ###
    iter_statements(DOWNGRADE)
