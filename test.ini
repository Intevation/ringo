###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
app.title = Ringo
app.mode = testing

use = egg:ringo

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm
    pyramid_mailer


# mako template settings
mako.directories = ringo:templates

# beaker session settings
session.type = file
session.data_dir = %(here)s/test-data/sessions/data
session.lock_dir = %(here)s/test-data/sessions/lock
session.key = customerskey
session.secret = customerssecret
session.cookie_on_exception = true

sqlalchemy.url = postgresql://@/ringotest

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

security.enable_csrf_check = false
security.auth_timeout = 1800
security.cookie_secret = ringo
security.cookie_ip = false

layout.show_logininfo = true

feature.enabled = true
feature.disabled = false
#feature.missing = false

###
# Mailserver settingd
###
mail.host = localhost
mail.default_sender = user@example.com
#mail.username =
#mail.password =

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, ringo, sqlalchemy, testcase

[handlers]
keys = console, filelog

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, filelog

[logger_ringo]
level = INFO
handlers =
qualname = ringo

[logger_testcase]
level = DEBUG
handlers =
qualname = ringo.lib.sql.db

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_filelog]
class = FileHandler
args = ('%(here)s/test.log','a')
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
